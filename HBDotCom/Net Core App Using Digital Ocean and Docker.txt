Create a project with Docker
Update dockerfile and create docker-compose.yml
Create a droplet
Setup new user:	https://www.digitalocean.com/community/tutorials/initial-server-setup-with-ubuntu-18-04
	adduser harley
Add new user to Sudo and Docker groups
	usermod -aG sudo harley
	usermod -aG docker harley
	rsync --archive --chown=harley:harley ~/.ssh /home/harley
login as new user
clone Git Repo into new droplet: git clone https://github.com/HarleyBartles/HarleyBartlesDotCom
cd all the way to the application root.
    cd HarleyBartlesDotCom/HBDotCom/HBDotCom
sudo service docker start
docker-compose build
point domain before you up the app for https reasons
docker-compose up
No DB connection?
	Open a new connection while the sql container is up
	docker exec -it perconaserver bash // To get into the running container.
	mysql -u root -p
	SET GLOBAL innodb_fast_shutdown = 1;
	exit
	mysql_upgrade -u root -p
Ctrl+C to exit
docker-compose up -d


SQL:

Docker-Compose:
  app:
    volumes:
      - appbuild:/app
    links:
      - db
    environment:
      MYSQL_SERVER_NAME: perconaserver
    env_file:
      - secrets.env
    networks:
      - app-network
  db:
    image: percona/percona-server:latest
    container_name: perconaserver
    restart: always
    volumes:
      # create volumes for use
      - dbvol:/var/lib/mysql
      # bind mount my local my.cnf
      # - $PWD/my.cnf:/etc/my.cnf
    environment:
      MYSQL_ROOT_PASSWORD: D4v1ds0n6514
    ports:
      - "3306"
    command:
      # Workaround for no my.cnf in image
        - '--user=mysql'
    networks:
      - app-network

volumes:
  appbuild:
  dbvol:

SQL Server (Dead End)
	docker run -e 'ACCEPT_EULA=Y' -e 'SA_PASSWORD=D4v1ds0n6514' -p 1433:1433 --name sqlserver -d microsoft/mssql-server-linux
Percona Standalone (Nope):
	Install
		wget https://repo.percona.com/apt/percona-release_0.1-6.$(lsb_release -	sc)_all.deb
		sudo dpkg -i percona-release_0.1-6.$(lsb_release -sc)_all.deb
		sudo apt-get update
		sudo apt-get install percona-server-server-5.7
	Start
		sudo service mysql start
	Check
		service mysql status
	Stop
		sudo service mysql stop
	Restart
		sudo service mysql restart

	Login to SQL
		docker exec -it mysql bash
		mysql -u root -p
	Create Administrator User
		GRANT ALL PRIVILEGES ON *.* TO 'administrator'@'localhost' IDENTIFIED BY 'D4v1ds0n6514';
	Show up DB's
		SHOW DATABASES;

MySQL Standalone (Nope)
	docker run --name HB-mysql -e MYSQL_ROOT_PASSWORD=D4v1ds0n6514 -d mysql:8

Local MySQL
	cd C:\Program Files\MySQL\mysql-8.0.13-winx64\bin
	mysqld --install
	mysqld --initialize --console
	[Server] A temporary password is generated for root@localhost: MWq;pI!63+h7
	net start mysql


docker container ls
docker stop $(docker ps -aq)


git pull origin master
Build on it's own:
	docker-compose build
Build and recreate
	docker-compose up --force-recreate --build
Clean Up
docker image prune -f

docker-compose up -d